{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react bc25/goit-react-hw-03-phonebook/src/PhoneBook/PhoneBook.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\nimport style from \"../PhoneBook/PhoneBook.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhoneBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      name: \"\",\n      filter: \"\"\n    };\n\n    this.addToList = contact => {\n      const {\n        name\n      } = contact;\n\n      if (this.state.contacts.every(contact => !contact.name.includes(name))) {\n        this.setState(prev => ({\n          contacts: [...prev.contacts, contact]\n        }));\n      } else {\n        alert(`${name} is alredy contact!`);\n      }\n    };\n\n    this.changeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.filterUser = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n\n    this.deleteUser = id => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const contact = localStorage.setItem(\"contact\");\n    const parseContact = JSON.parse(contact);\n\n    if (parseContact) {\n      this.setState({\n        contacts: parseContact\n      });\n    }\n  }\n\n  componentDidUpdate(preveProps, PreveState) {\n    if (this.state.contacts !== prevState.contacts) localStorage.setItem('contact', JSON.stringify);\n  }\n\n  render() {\n    const {\n      filter,\n      contacts\n    } = this.state;\n    const visibleUser = this.filterUser();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addToList: this.addToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), contacts.length > 2 ? /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChangeFilter: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: visibleUser,\n        deleteContact: this.deleteUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PhoneBook;","map":{"version":3,"sources":["/Users/admin/Desktop/react bc25/goit-react-hw-03-phonebook/src/PhoneBook/PhoneBook.js"],"names":["React","Component","Form","Contacts","Filter","style","PhoneBook","state","contacts","name","filter","addToList","contact","every","includes","setState","prev","alert","changeFilter","filterUser","toLowerCase","deleteUser","id","prevState","componentDidMount","localStorage","setItem","parseContact","JSON","parse","componentDidUpdate","preveProps","PreveState","stringify","render","visibleUser","container","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\nimport style from \"../PhoneBook/PhoneBook.module.css\";\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contact = localStorage.setItem(\"contact\");\n    const parseContact = JSON.parse(contact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n\n  componentDidUpdate(preveProps,PreveState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contact', JSON.stringify)\n  }\n\n  addToList = (contact) => {\n    const { name } = contact;\n    if (this.state.contacts.every((contact) => !contact.name.includes(name))) {\n      this.setState((prev) => ({ contacts: [...prev.contacts, contact] }));\n    } else {\n      alert(`${name} is alredy contact!`);\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  filterUser = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  deleteUser = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleUser = this.filterUser();\n    return (\n      <div className={style.container}>\n        <h1>PhoneBook</h1>\n        <Form addToList={this.addToList} />\n        {contacts.length > 2 ? <Filter value={filter} onChangeFilter={this.changeFilter} /> : \"\"}\n        <Contacts contacts={visibleUser} deleteContact={this.deleteUser} />\n      </div>\n    );\n  }\n}\n\nexport default PhoneBook;\n"]},"metadata":{},"sourceType":"module"}